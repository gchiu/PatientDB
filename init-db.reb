Rebol [
    file: %init-db.reb
    purpose: {clears existing tables if present and then loads with some initial data ready for importing}
    date: 3-Dec-2021
    author: "Graham Chiu"
]

dbase: open odbc://test
port: odbc-statement-of dbase

if "Yes" = ask ["Delete all the data from patients database? (Yes/No) " text!] [
    foreach table ['patients 'nhilookup 'files 'clinicians 'fps 'letters 'medications 'diagnoses 'gpcentre] [
        insert port [{drop table (?)} form table]
    ]
]

find-table: func [p [port!] tablename [text!]] [
    insert p {SELECT RDB$RELATION_NAME FROM RDB$RELATIONS WHERE (RDB$SYSTEM_FLAG <> 1 OR RDB$SYSTEM_FLAG IS NULL) AND RDB$VIEW_BLR IS NULL ORDER BY RDB$RELATION_NAME;}
    for-each record copy p [
        if tablename = trim record/1 [return true]
    ]
    return false
]

drop-table: func [p [port!] tablename [text!]] [
    insert p [{drop table (?)} tablename]
]

drop-existing-table: func [p [port!] tablename [text!]] [
    if find-table p tablename [
        drop-table p tablename
    ]
]
; we are not going to use the NHI as the id but a unique integer
; NHI format is 3 alpha 4 integer
drop-existing-table port "NHILOOKUP"
insert port {create table nhilookup ( id integer generated by default as identity primary key, "NHI" CHAR(7) UNIQUE NOT NULL)}
; dummy data
;insert port {insert into nhilookup (nhi) values ('MZK1240')}
;insert port {insert into nhilookup (nhi) values ('abc1234')}
;insert port {insert into nhilookup (nhi) values ('efg1923')}

drop-existing-table port "CLINICIANS"
insert port {create table clinicians ( id integer generated by default as identity primary key, 
        surname varchar(128),
        fname varchar(128),
        clintype int,
        registration int  
    )}

; real rheumatology data
cns: 2 dr: 1
insert port {insert into clinicians ( surname, fname, clintype) values ('Chiu', 'Graham', dr)}
insert port {insert into clinicians ( surname, fname, clintype) values ('Elasir', 'Haitham', dr)}
insert port {insert into clinicians ( surname, fname, clintype) values ('Porten', 'Lauren', cns)}
insert port {insert into clinicians ( surname, fname, clintype) values ('Sawyers', 'Stephen', dr)}
insert port {insert into clinicians ( surname, fname, clintype) values ('Hawke', 'Sonia', cns)}
unset [cns dr]

; add consults
; id int, clinician id, date timestamp, text blob_e, checksum 
drop-existing-table port "LETTERS"
insert port {
        create table letters (
            id integer generated by default as identity primary key,
            clinicians integer,
            nhi integer,
            cdate date,
            dictation blob sub_type text,
            checksum char(43),
            unique(checksum)
        )
    }

; add patients
drop-existing-table port "PATIENTS"
insert port {
        create table patients (
            id integer generated by default as identity primary key,
            created timestamp default current_timestamp,
            nhi integer,
            clinicians integer,
            dob date,
            gender char(1),
            pronoun char(4),
            surname varchar(128),
            fname varchar(128),
            sname varchar(128),
            street varchar(256),
            street2 varchar(256),
            town varchar(256),
            areacode integer,
            email varchar(128),
            phone varchar(15),
            mobile varchar(15),
            gp integer,
            gpcentre integer,
            gpname varchar(128),
            gpcentname varchar(128),
            deceased boolean default false,
            discharged boolean default false
        )
    }

; vaccination database - where record the vaccines given

drop-existing-table port "VACCINATIONS"
insert port {
        create table vaccinations (
            id integer generated by default as identity primary key,
            created timestamp default current_timestamp,
            nhi integer,
            vaccineid integer,
            outcome varchar(128),
            vaxdate date
        )    
    }
]